name: Lydia CI pipeline

on:
  push:
    branches:
      - develop
      - master
  pull_request:

jobs:
  run:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]  # TODO include macos-latest, windows-latest

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -f flex bison
          sudo apt-get install -f libgraphviz-dev
          sudo apt-get install -f clang-format-9 clang-tidy-9
          sudo python -m pip install gcovr
          alias gcovr='python -m gcovr'
      - name: Install CUDD
        run: |
          sudo apt-get install -f automake libtool
          cd third_party/cudd
          autoreconf -i
          ./configure --enable-silent-rules --enable-obj --enable-dddmp
          sudo make install
      - name: Check File Headers
        run: python3 ./scripts/check_copyright_notice.py
      - name: Check clang-format
        run: ./scripts/check-clang-format.sh
      - name: Check clang-tidy
        run: ./scripts/check-clang-tidy.sh
      - name: Check File Headers
        run: python3 ./scripts/check_copyright_notice.py
      - name: Configure CMake
        run: |
          ./scripts/_ci-configure.sh .
      - name: Build
        run: |
          cd build && make -j
      - name: Test
        run: |
          ./scripts/_ci-test.sh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true
      - name: Benchmarks
        run: |
          ./scripts/_ci-bench.sh
